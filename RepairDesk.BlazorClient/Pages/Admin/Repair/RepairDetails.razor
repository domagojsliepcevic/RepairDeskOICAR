@page "/admin/repairs/{id:int}"
@inject IRepairDeskApiClient httpClient
@inject NavigationManager navMan
@inject IToastService toastService
@inject AuthenticationStateProvider authStateProvider

<div class="container-fluid">
    <div class="row">
        <AdminHeader />
    </div>
    <div class="row">
        @if (isAdmin)
        {
        <div class="col-md-2">
            <AdminNav />
        </div>
        <div class="col-md-10">
            <div class="row col-md-6" style="margin-top:1rem;">
                <h3>Repair Details</h3>
                <NavLink href="/admin/repairs" class="admin list-link">Repairs List</NavLink>
                <AdminRepairForm Data="@repairData" />
            </div>
        </div>
        }
        else
        {
            <Unauthorized />
        }
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }

    private ClaimsPrincipal principal { get; set; }
    private bool isAdmin { get; set; }
    private RepairDetailsModel repairData = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await authStateProvider.GetAuthenticationStateAsync();
            principal = authState.User;
            if (!principal.Identity.IsAuthenticated)
            {
                navMan.NavigateTo("/login");
            }
            else
            {
                isAdmin = principal.HasRole("admin");
                if (isAdmin)
                {
                    repairData = await httpClient.GetRepairAsync(id);
                }
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message);
        }
    }

}

